
<h3>My Google Maps Demo</h3>
<!--The div element for the map -->
<div id="map" style=" height: 100%;"></div>
<br>
<button id="test2">최단거리 대피소</button>
<div id="test">

</div>
<script>
    var beaches = [['hi',37.528292,127.117533,0]];
    // The following example creates complex markers to indicate beaches near
    // Sydney, NSW, Australia. Note that the anchor is set to (0,32) to correspond
    // to the base of the flagpole.

    function initMap() {

        var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 10,
            center: {lat: -33.9, lng: 151.2}
        });

        listphoto();

        $("#test2").click(function () {
            alert('df');
            //
            // $.post("http://222.107.4.162:8230/closeshel",
            //
            //     JSON.stringify({
            //         x: 37.528292,
            //         y: 127.117533
            //     }),
            //     function (data, status) {
            //         alert("Data: " + data + "\nStatus: " + status);
            //         $('#test').html(data);
            //     });

            $.ajax({
                url: 'http://192.168.90.97:8080/closeshel',
                contentType: 'application/json',
                method: 'POST',
                crossDomain: true,
                data: JSON.stringify({
                x: 37.528292,
                y: 127.117533
            }),
                success: function(data){
                    alert('답장'+data);
                $('#test').html(data.name + '  ' + data.x+ ' '+data.y);
                    beaches.push([data.name ,parseFloat(data.x),parseFloat(data.y),10]);
                    setMarkers(map);
            }, error:function (error) {
                    alert(error);
                }

        });

        });


        setMarkers(map);

       }

    // Data for the markers consisting of a name, a LatLng and a zIndex for the
    // order in which these markers should display on top of each other.


    function setMarkers(map) { //마커 찍기
        // Adds markers to the map.

        // Marker sizes are expressed as a Size of X,Y where the origin of the image
        // (0,0) is located in the top left of the image.

        // Origins, anchor positions and coordinates of the marker increase in the X
        // direction to the right and in the Y direction down.
        var image = {
            url: 'https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png',
            // This marker is 20 pixels wide by 32 pixels high.
            size: new google.maps.Size(20, 32),
            // The origin for this image is (0, 0).
            origin: new google.maps.Point(0, 0),
            // The anchor for this image is the base of the flagpole at (0, 32).
            anchor: new google.maps.Point(0, 32)
        };
        // Shapes define the clickable region of the icon. The type defines an HTML
        // <area> element 'poly' which traces out a polygon as a series of X,Y points.
        // The final coordinate closes the poly by connecting to the first coordinate.
        var shape = {
            coords: [1, 1, 1, 20, 18, 20, 18, 1],
            type: 'poly'
        };
        for (var i = 0; i < beaches.length; i++) {
            var beach = beaches[i];
           alert('dddd   ' +beaches[i]);
            var marker = new google.maps.Marker({
                position: {lat: beach[1], lng: beach[2]},
                map: map,
                icon: image,
                shape: shape,
                title: beach[0],
                zIndex: beach[3]
            });
        };

     marker.addListener('click', function() {
            alert()
            $.get("/walwalDetail", function(data, status){
                $("#map").html(data);
                alert("Data: " + data + "\nStatus: " + status);
            });
        });


    }


    function listphoto(){
        var location;
        $.ajax({
            url : "http://192.168.90.97:8080/listphoto",
            type : 'get',
            success : function(data){
                console.log(data+'data');
                $.each(data , function(index,item){
                    console.log('item.location '+item.location+' '+typeof item.location);
                    location = (item.location+'').split(',');
                    beaches.push([item._id,parseFloat(location[0]),parseFloat(location[1]),index]);
                    console.log(beaches);
                    alert(beaches);
                });

            },
            error : function(){
                alert("error");
            }
        });
    }




</script>
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC4eNRqzjvSO377TBROM49jWkpnphBoaZk&callback=initMap">
</script>


